create table artists (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(255)
);

create table albums (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  title varchar(255),
  artist_id int REFERENCES artists (id)
);

create table songs (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  title varchar(255) NOT NULL,
  artist_id int REFERENCES artists (id),
  album_id int REFERENCES albums (id)
);

create table videos (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  url varchar(255) NOT NULL,
  song_id int REFERENCES songs (id)
);


CREATE POLICY "Enable access to all users" 
ON public.albums
FOR SELECT
USING (true);

CREATE POLICY "Enable insert for me only" 
ON public.albums 
for INSERT
WITH CHECK (auth.uid() = 'xxxxx');

CREATE POLICY "Enable update for me only" 
ON public.albums 
FOR UPDATE 
USING (auth.uid() = 'xxxxx') 
WITH CHECK (auth.uid() = 'xxxxx');

CREATE POLICY "Enable delete for me only" 
ON public.albums 
FOR DELETE 
USING (auth.uid() = 'xxxxx');


---



CREATE POLICY "Enable access to all users" 
ON public.songs
FOR SELECT
USING (true);

CREATE POLICY "Enable insert for me only" 
ON public.songs 
for INSERT
WITH CHECK (auth.uid() = 'xxxxx');

CREATE POLICY "Enable update for me only" 
ON public.songs 
FOR UPDATE 
USING (auth.uid() = 'xxxxx') 
WITH CHECK (auth.uid() = 'xxxxx');

CREATE POLICY "Enable delete for me only" 
ON public.songs 
FOR DELETE 
USING (auth.uid() = 'xxxxx');